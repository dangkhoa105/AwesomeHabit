{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Calender;\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _index = require(\"@dungdang/react-native-basic/index\");\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nvar _jsxFileName = \"F:\\\\ReactNative\\\\AwesomeHabit\\\\src\\\\screens\\\\Home\\\\Customs\\\\Calender.js\";\nvar calendar = [];\n\nfor (var i = 1; i < 8; i++) {\n  calendar = [].concat((0, _toConsumableArray2.default)(calendar), [{\n    date: (0, _moment.default)().isoWeekday(i).format('DD'),\n    day: (0, _moment.default)().isoWeekday(i).format('ddd')\n  }]);\n}\n\nvar curDate = (0, _moment.default)().utc().format('DD');\n\nfunction Calender() {\n  var _this = this;\n\n  return _react.default.createElement(_reactNative.View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.FlatList, {\n    data: calendar,\n    keyExtractor: function keyExtractor(item, index) {\n      return 'key' + index;\n    },\n    horizontal: true,\n    showsHorizontalScrollIndicator: false,\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.wrapItem, {\n          backgroundColor: curDate === item.date ? '#F1ECFF' : '#E8F1F4',\n          borderWidth: curDate === item.date ? 1 : 0\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        style: [styles.txtItem, {\n          paddingBottom: _index.Sizes.s20,\n          fontSize: _index.Sizes.s20,\n          fontWeight: curDate === item.date ? 'bold' : 'normal',\n          color: curDate === item.date ? '#9F7EFF' : '#698790'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }, item.day.toUpperCase()), _react.default.createElement(_reactNative.Text, {\n        style: [styles.txtItem, {\n          color: curDate === item.date ? '#9F7EFF' : '#698790'\n        }],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 29\n        }\n      }, item.date));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }));\n}\n\nvar styles = _reactNative.StyleSheet.create({\n  wrapItem: {\n    padding: _index.Sizes.h32,\n    backgroundColor: '#E8F1F4',\n    marginHorizontal: _index.Sizes.h16,\n    marginVertical: _index.Sizes.h48,\n    borderRadius: _index.Sizes.s25,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderColor: '#9F7EFF'\n  },\n  txtItem: {\n    fontSize: _index.Sizes.h32,\n    fontWeight: 'bold',\n    color: '#698790'\n  }\n});","map":{"version":3,"sources":["F:/ReactNative/AwesomeHabit/src/screens/Home/Customs/Calender.js"],"names":["calendar","i","date","isoWeekday","format","day","curDate","utc","Calender","item","index","styles","wrapItem","backgroundColor","borderWidth","txtItem","paddingBottom","Sizes","s20","fontSize","fontWeight","color","toUpperCase","StyleSheet","create","padding","h32","marginHorizontal","h16","marginVertical","h48","borderRadius","s25","justifyContent","alignItems","borderColor"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;AAGA,IAAIA,QAAQ,GAAG,EAAf;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AACxBD,EAAAA,QAAQ,8CAAOA,QAAP,IAAiB;AACrBE,IAAAA,IAAI,EAAE,uBAASC,UAAT,CAAoBF,CAApB,EAAuBG,MAAvB,CAA8B,IAA9B,CADe;AAErBC,IAAAA,GAAG,EAAE,uBAASF,UAAT,CAAoBF,CAApB,EAAuBG,MAAvB,CAA8B,KAA9B;AAFgB,GAAjB,EAAR;AAIH;;AAED,IAAME,OAAO,GAAG,uBAASC,GAAT,GAAeH,MAAf,CAAsB,IAAtB,CAAhB;;AAEe,SAASI,QAAT,GAAoB;AAAA;;AAC/B,SACI,6BAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,6BAAC,qBAAD;AACI,IAAA,IAAI,EAAER,QADV;AAEI,IAAA,YAAY,EAAE,sBAACS,IAAD,EAAOC,KAAP;AAAA,aAAiB,QAAQA,KAAzB;AAAA,KAFlB;AAGI,IAAA,UAAU,MAHd;AAII,IAAA,8BAA8B,EAAE,KAJpC;AAKI,IAAA,UAAU,EAAE,0BAAc;AAAA,UAAXD,IAAW,QAAXA,IAAW;AACtB,aACI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACE,MAAM,CAACC,QAAR,EAAkB;AAC3BC,UAAAA,eAAe,EAAEP,OAAO,KAAKG,IAAI,CAACP,IAAjB,GAAwB,SAAxB,GAAoC,SAD1B;AAE3BY,UAAAA,WAAW,EAAER,OAAO,KAAKG,IAAI,CAACP,IAAjB,GAAwB,CAAxB,GAA4B;AAFd,SAAlB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACS,MAAM,CAACI,OAAR,EAAiB;AAC1BC,UAAAA,aAAa,EAAEC,aAAMC,GADK;AAE1BC,UAAAA,QAAQ,EAAEF,aAAMC,GAFU;AAG1BE,UAAAA,UAAU,EAAEd,OAAO,KAAKG,IAAI,CAACP,IAAjB,GAAwB,MAAxB,GAAiC,QAHnB;AAI1BmB,UAAAA,KAAK,EAAEf,OAAO,KAAKG,IAAI,CAACP,IAAjB,GAAwB,SAAxB,GAAoC;AAJjB,SAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMKO,IAAI,CAACJ,GAAL,CAASiB,WAAT,EANL,CAJJ,EAYI,6BAAC,iBAAD;AAAM,QAAA,KAAK,EAAE,CAACX,MAAM,CAACI,OAAR,EAAiB;AAC1BM,UAAAA,KAAK,EAAEf,OAAO,KAAKG,IAAI,CAACP,IAAjB,GAAwB,SAAxB,GAAoC;AADjB,SAAjB,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGKO,IAAI,CAACP,IAHV,CAZJ,CADJ;AAoBH,KA1BL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAgCH;;AAED,IAAMS,MAAM,GAAGY,wBAAWC,MAAX,CAAkB;AAC7BZ,EAAAA,QAAQ,EAAE;AACNa,IAAAA,OAAO,EAAER,aAAMS,GADT;AAENb,IAAAA,eAAe,EAAE,SAFX;AAGNc,IAAAA,gBAAgB,EAAEV,aAAMW,GAHlB;AAINC,IAAAA,cAAc,EAAEZ,aAAMa,GAJhB;AAKNC,IAAAA,YAAY,EAAEd,aAAMe,GALd;AAMNC,IAAAA,cAAc,EAAE,QANV;AAONC,IAAAA,UAAU,EAAE,QAPN;AAQNC,IAAAA,WAAW,EAAE;AARP,GADmB;AAU1BpB,EAAAA,OAAO,EAAE;AACRI,IAAAA,QAAQ,EAAEF,aAAMS,GADR;AAERN,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,KAAK,EAAE;AAHC;AAViB,CAAlB,CAAf","sourcesContent":["import React from 'react'\r\nimport { View, Text, FlatList, StyleSheet } from 'react-native'\r\nimport { Sizes } from '@dungdang/react-native-basic/index'\r\nimport moment from 'moment';\r\n\r\n// get calendar\r\nvar calendar = []\r\nfor (let i = 1; i < 8; i++) {\r\n    calendar = [...calendar, {\r\n        date: moment().isoWeekday(i).format('DD'),\r\n        day: moment().isoWeekday(i).format('ddd')\r\n    }]\r\n}\r\n\r\nconst curDate = moment().utc().format('DD')\r\n\r\nexport default function Calender() {\r\n    return (\r\n        <View>\r\n            <FlatList\r\n                data={calendar}\r\n                keyExtractor={(item, index) => 'key' + index}\r\n                horizontal\r\n                showsHorizontalScrollIndicator={false}\r\n                renderItem={({ item }) => {\r\n                    return (\r\n                        <View style={[styles.wrapItem, {\r\n                            backgroundColor: curDate === item.date ? '#F1ECFF' : '#E8F1F4',\r\n                            borderWidth: curDate === item.date ? 1 : 0\r\n                        }]}>\r\n                            <Text style={[styles.txtItem, {\r\n                                paddingBottom: Sizes.s20,\r\n                                fontSize: Sizes.s20,\r\n                                fontWeight: curDate === item.date ? 'bold' : 'normal',\r\n                                color: curDate === item.date ? '#9F7EFF' : '#698790'\r\n                            }]}>\r\n                                {item.day.toUpperCase()}\r\n                            </Text>\r\n                            <Text style={[styles.txtItem, {\r\n                                color: curDate === item.date ? '#9F7EFF' : '#698790'\r\n                            }]}>\r\n                                {item.date}\r\n                            </Text>\r\n                        </View>\r\n                    )\r\n                }}\r\n            />\r\n        </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    wrapItem: {\r\n        padding: Sizes.h32,\r\n        backgroundColor: '#E8F1F4',\r\n        marginHorizontal: Sizes.h16,\r\n        marginVertical: Sizes.h48,\r\n        borderRadius: Sizes.s25,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderColor: '#9F7EFF'\r\n    }, txtItem: {\r\n        fontSize: Sizes.h32,\r\n        fontWeight: 'bold',\r\n        color: '#698790'\r\n    }\r\n})\r\n"]},"metadata":{},"sourceType":"script"}