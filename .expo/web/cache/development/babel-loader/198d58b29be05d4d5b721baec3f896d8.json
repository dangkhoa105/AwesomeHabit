{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _jsxFileName = \"F:\\\\ReactNative\\\\AwesomeHabit\\\\node_modules\\\\react-native-progress-circle\\\\src\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar ViewPropTypesStyle = _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style;\nvar direction = _reactNative.I18nManager.isRTL ? 'right' : 'left';\n\nvar styles = _reactNative.StyleSheet.create({\n  outerCircle: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  innerCircle: {\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  leftWrap: (0, _defineProperty2.default)({\n    position: 'absolute',\n    top: 0\n  }, \"\" + direction, 0),\n  halfCircle: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  }\n});\n\nfunction percentToDegrees(percent) {\n  return percent * 3.6;\n}\n\nvar PercentageCircle = function (_Component) {\n  (0, _inherits2.default)(PercentageCircle, _Component);\n\n  var _super = _createSuper(PercentageCircle);\n\n  function PercentageCircle() {\n    (0, _classCallCheck2.default)(this, PercentageCircle);\n    return _super.apply(this, arguments);\n  }\n\n  (0, _createClass2.default)(PercentageCircle, [{\n    key: \"computeDerivedState\",\n    value: function computeDerivedState() {\n      var props = this.props;\n      var percent = Math.max(Math.min(100, props.percent), 0);\n      var needHalfCircle2 = percent > 50;\n      var halfCircle1Degree;\n      var halfCircle2Degree;\n\n      if (needHalfCircle2) {\n        halfCircle1Degree = 180;\n        halfCircle2Degree = percentToDegrees(percent);\n      } else {\n        halfCircle1Degree = percentToDegrees(percent);\n        halfCircle2Degree = 0;\n      }\n\n      return {\n        halfCircle1Degree: halfCircle1Degree,\n        halfCircle2Degree: halfCircle2Degree,\n        halfCircle2Styles: {\n          backgroundColor: needHalfCircle2 ? props.color : props.shadowColor\n        }\n      };\n    }\n  }, {\n    key: \"renderHalfCircle\",\n    value: function renderHalfCircle(rotateDegrees, halfCircleStyles) {\n      var _this$props = this.props,\n          radius = _this$props.radius,\n          color = _this$props.color;\n      var key = _reactNative.I18nManager.isRTL ? 'right' : 'left';\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.leftWrap, {\n          width: radius,\n          height: radius * 2\n        }],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [styles.halfCircle, (0, _extends2.default)({\n          width: radius,\n          height: radius * 2,\n          borderRadius: radius,\n          overflow: 'hidden',\n          transform: [{\n            translateX: radius / 2\n          }, {\n            rotate: rotateDegrees + \"deg\"\n          }, {\n            translateX: -radius / 2\n          }],\n          backgroundColor: color\n        }, halfCircleStyles)],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }));\n    }\n  }, {\n    key: \"renderInnerCircle\",\n    value: function renderInnerCircle() {\n      var radiusMinusBorder = this.props.radius - this.props.borderWidth;\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.innerCircle, (0, _extends2.default)({\n          width: radiusMinusBorder * 2,\n          height: radiusMinusBorder * 2,\n          borderRadius: radiusMinusBorder,\n          backgroundColor: this.props.bgColor\n        }, this.props.containerStyle)],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      }, this.props.children);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$computeDerivedS = this.computeDerivedState(),\n          halfCircle1Degree = _this$computeDerivedS.halfCircle1Degree,\n          halfCircle2Degree = _this$computeDerivedS.halfCircle2Degree,\n          halfCircle2Styles = _this$computeDerivedS.halfCircle2Styles;\n\n      return _react.default.createElement(_reactNative.View, {\n        style: [styles.outerCircle, (0, _extends2.default)({\n          width: this.props.radius * 2,\n          height: this.props.radius * 2,\n          borderRadius: this.props.radius,\n          backgroundColor: this.props.shadowColor\n        }, this.props.outerCircleStyle)],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, this.renderHalfCircle(halfCircle1Degree), this.renderHalfCircle(halfCircle2Degree, halfCircle2Styles), this.renderInnerCircle());\n    }\n  }]);\n  return PercentageCircle;\n}(_react.Component);\n\nexports.default = PercentageCircle;\nPercentageCircle.propTypes = {\n  color: _propTypes.default.string,\n  shadowColor: _propTypes.default.string,\n  bgColor: _propTypes.default.string,\n  radius: _propTypes.default.number.isRequired,\n  borderWidth: _propTypes.default.number,\n  percent: _propTypes.default.number.isRequired,\n  children: _propTypes.default.node,\n  containerStyle: ViewPropTypesStyle,\n  outerCircleStyle: ViewPropTypesStyle\n};\nPercentageCircle.defaultProps = {\n  color: '#f00',\n  shadowColor: '#999',\n  bgColor: '#e9e9ef',\n  borderWidth: 2,\n  children: null,\n  containerStyle: null\n};","map":{"version":3,"sources":["F:/ReactNative/AwesomeHabit/node_modules/react-native-progress-circle/src/index.js"],"names":["ViewPropTypesStyle","ViewPropTypes","style","View","propTypes","direction","I18nManager","isRTL","styles","StyleSheet","create","outerCircle","justifyContent","alignItems","innerCircle","overflow","leftWrap","position","top","halfCircle","left","borderTopRightRadius","borderBottomRightRadius","percentToDegrees","percent","PercentageCircle","props","Math","max","min","needHalfCircle2","halfCircle1Degree","halfCircle2Degree","halfCircle2Styles","backgroundColor","color","shadowColor","rotateDegrees","halfCircleStyles","radius","key","width","height","borderRadius","transform","translateX","rotate","radiusMinusBorder","borderWidth","bgColor","containerStyle","children","computeDerivedState","outerCircleStyle","renderHalfCircle","renderInnerCircle","Component","PropTypes","string","number","isRequired","node","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { StyleSheet, View, ViewPropTypes,I18nManager } from 'react-native'\n\n// compatability for react-native versions < 0.44\nconst ViewPropTypesStyle = ViewPropTypes\n  ? ViewPropTypes.style\n  : View.propTypes.style\nlet direction = I18nManager.isRTL? 'right' : 'left';\nconst styles = StyleSheet.create({\n  outerCircle: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  innerCircle: {\n    overflow: 'hidden',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  leftWrap: {\n    position: 'absolute',\n    top: 0,\n    [`${direction}`]: 0,\n  },\n  halfCircle: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0,\n  },\n})\n\nfunction percentToDegrees(percent) {\n  return percent * 3.6\n}\n\nexport default class PercentageCircle extends Component {\n  static propTypes = {\n    color: PropTypes.string,\n    shadowColor: PropTypes.string,\n    bgColor: PropTypes.string,\n    radius: PropTypes.number.isRequired,\n    borderWidth: PropTypes.number,\n    percent: PropTypes.number.isRequired, // eslint-disable-line react/no-unused-prop-types\n    children: PropTypes.node,\n    containerStyle: ViewPropTypesStyle,\n    outerCircleStyle: ViewPropTypesStyle\n  };\n\n  static defaultProps = {\n    color: '#f00',\n    shadowColor: '#999',\n    bgColor: '#e9e9ef',\n    borderWidth: 2,\n    children: null,\n    containerStyle: null,\n  };\n\n  computeDerivedState() {\n    const { props } = this;\n    const percent = Math.max(Math.min(100, props.percent), 0)\n    const needHalfCircle2 = percent > 50\n    let halfCircle1Degree\n    let halfCircle2Degree\n    // degrees indicate the 'end' of the half circle, i.e. they span (degree - 180, degree)\n    if (needHalfCircle2) {\n      halfCircle1Degree = 180\n      halfCircle2Degree = percentToDegrees(percent)\n    } else {\n      halfCircle1Degree = percentToDegrees(percent)\n      halfCircle2Degree = 0\n    }\n\n    return {\n      halfCircle1Degree,\n      halfCircle2Degree,\n      halfCircle2Styles: {\n        // when the second half circle is not needed, we need it to cover\n        // the negative degrees of the first circle\n        backgroundColor: needHalfCircle2\n          ? props.color\n          : props.shadowColor,\n      },\n    }\n  }\n\n  renderHalfCircle(rotateDegrees, halfCircleStyles) {\n    const { radius, color } = this.props\n    const key = I18nManager.isRTL ? 'right' : 'left';\n    return (\n      <View\n        style={[\n          styles.leftWrap,\n          {\n            width: radius,\n            height: radius * 2,\n          },\n        ]}\n      >\n        <View\n          style={[\n            styles.halfCircle,\n            {\n              width: radius,\n              height: radius * 2,\n              borderRadius: radius,\n              overflow: 'hidden',\n              transform: [\n                { translateX: radius / 2 },\n                { rotate: `${rotateDegrees}deg` },\n                { translateX: -radius / 2 },\n              ],\n              backgroundColor: color,\n              ...halfCircleStyles,\n            },\n          ]}\n        />\n      </View>\n    )\n  }\n\n  renderInnerCircle() {\n    const radiusMinusBorder = this.props.radius - this.props.borderWidth\n    return (\n      <View\n        style={[\n          styles.innerCircle,\n          {\n            width: radiusMinusBorder * 2,\n            height: radiusMinusBorder * 2,\n            borderRadius: radiusMinusBorder,\n            backgroundColor: this.props.bgColor,\n            ...this.props.containerStyle,\n          },\n        ]}\n      >\n        {this.props.children}\n      </View>\n    )\n  }\n\n  render() {\n    const {\n      halfCircle1Degree,\n      halfCircle2Degree,\n      halfCircle2Styles,\n    } = this.computeDerivedState()\n\n    return (\n      <View\n        style={[\n          styles.outerCircle,\n          {\n            width: this.props.radius * 2,\n            height: this.props.radius * 2,\n            borderRadius: this.props.radius,\n            backgroundColor: this.props.shadowColor,\n            ...this.props.outerCircleStyle,\n          },\n        ]}\n      >\n        {this.renderHalfCircle(halfCircle1Degree)}\n        {this.renderHalfCircle(halfCircle2Degree, halfCircle2Styles)}\n        {this.renderInnerCircle()}\n      </View>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}