{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = App;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _index = require(\"@dungdang/react-native-basic/index\");\n\nvar _MaterialIcons = _interopRequireDefault(require(\"react-native-vector-icons/MaterialIcons\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _bottomTabs = require(\"@react-navigation/bottom-tabs\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _HomeContainer = _interopRequireDefault(require(\"./Home/HomeContainer\"));\n\nvar _ReportContainer = _interopRequireDefault(require(\"./Report/ReportContainer\"));\n\nvar _SettingContainer = _interopRequireDefault(require(\"./Setting/SettingContainer\"));\n\nvar _LoginContainer = _interopRequireDefault(require(\"./Login/LoginContainer\"));\n\nvar _themeProvider = require(\"../theme/themeProvider\");\n\nvar _jsxFileName = \"F:\\\\ReactNative\\\\AwesomeHabit\\\\src\\\\containers\\\\App.js\";\nvar Tab = (0, _bottomTabs.createBottomTabNavigator)();\n\nfunction TAB() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"HomeContainer\",\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n          if (route.name === 'HomeContainer') iconName = 'dashboard';else if (route.name === 'ReportContainer') iconName = 'insert-chart';else if (route.name === 'SettingContainer') iconName = 'settings';\n          return React.createElement(_MaterialIcons.default, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 18\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: '#3E1B72',\n      inactiveTintColor: '#B2C1C6',\n      showLabel: false,\n      style: {\n        backgroundColor: '#fff',\n        borderTopLeftRadius: _index.Sizes.h40,\n        borderTopRightRadius: _index.Sizes.h40\n      },\n      keyboardHidesTabBar: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"HomeContainer\",\n    component: _HomeContainer.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ReportContainer\",\n    component: _ReportContainer.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"SettingContainer\",\n    component: _SettingContainer.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar Stack = (0, _stack.createStackNavigator)();\n\nfunction App() {\n  return React.createElement(_themeProvider.AppThemeProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(_native.NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    headerMode: \"none\",\n    initialRouteName: \"LoginContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"LoginContainer\",\n    component: _LoginContainer.default,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    options: {\n      cardStyle: {\n        backgroundColor: '#F8FBFB'\n      }\n    },\n    name: \"Tab\",\n    component: TAB,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["F:/ReactNative/AwesomeHabit/src/containers/App.js"],"names":["Tab","TAB","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor","showLabel","style","backgroundColor","borderTopLeftRadius","Sizes","h40","borderTopRightRadius","keyboardHidesTabBar","HomeContainer","ReportContainer","SettingContainer","Stack","App","LoginContainer","cardStyle"],"mappings":";;;;;;;;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAEA,IAAMA,GAAG,GAAG,2CAAZ;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,SACE,oBAAC,GAAD,CAAK,SAAL;AACE,IAAA,gBAAgB,EAAC,eADnB;AAEE,IAAA,aAAa,EAAE;AAAA,UAAGC,KAAH,QAAGA,KAAH;AAAA,aAAgB;AAC7BC,QAAAA,UAAU,EAAE,2BAA8B;AAAA,cAA3BC,OAA2B,SAA3BA,OAA2B;AAAA,cAAlBC,KAAkB,SAAlBA,KAAkB;AAAA,cAAXC,IAAW,SAAXA,IAAW;AACxC,cAAIC,QAAJ;AAEA,cAAIL,KAAK,CAACM,IAAN,KAAe,eAAnB,EAAoCD,QAAQ,GAAG,WAAX,CAApC,KACK,IAAIL,KAAK,CAACM,IAAN,KAAe,iBAAnB,EAAsCD,QAAQ,GAAG,cAAX,CAAtC,KACA,IAAIL,KAAK,CAACM,IAAN,KAAe,kBAAnB,EAAuCD,QAAQ,GAAG,UAAX;AAE5C,iBAAO,oBAAC,sBAAD;AAAe,YAAA,IAAI,EAAEA,QAArB;AAA+B,YAAA,IAAI,EAAED,IAArC;AAA2C,YAAA,KAAK,EAAED,KAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;AAT4B,OAAhB;AAAA,KAFjB;AAaE,IAAA,aAAa,EAAE;AACbI,MAAAA,eAAe,EAAE,SADJ;AAEbC,MAAAA,iBAAiB,EAAE,SAFN;AAGbC,MAAAA,SAAS,EAAE,KAHE;AAIbC,MAAAA,KAAK,EAAE;AACLC,QAAAA,eAAe,EAAE,MADZ;AAELC,QAAAA,mBAAmB,EAAEC,aAAMC,GAFtB;AAGLC,QAAAA,oBAAoB,EAAEF,aAAMC;AAHvB,OAJM;AASbE,MAAAA,mBAAmB,EAAE;AATR,KAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAyBE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,eAAjB;AAAiC,IAAA,SAAS,EAAEC,sBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzBF,EA0BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,iBAAjB;AAAmC,IAAA,SAAS,EAAEC,wBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1BF,EA2BE,oBAAC,GAAD,CAAK,MAAL;AAAY,IAAA,IAAI,EAAC,kBAAjB;AAAoC,IAAA,SAAS,EAAEC,yBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA3BF,CADF;AA+BD;;AAED,IAAMC,KAAK,GAAG,kCAAd;;AAEe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,+BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,2BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,SAAP;AAAiB,IAAA,UAAU,EAAC,MAA5B;AAAmC,IAAA,gBAAgB,EAAC,gBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,gBAAnB;AAAoC,IAAA,SAAS,EAAEC,uBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD,CAAO,MAAP;AACE,IAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAEZ,QAAAA,eAAe,EAAE;AAAnB;AAAb,KADX;AAEE,IAAA,IAAI,EAAC,KAFP;AAGE,IAAA,SAAS,EAAEZ,GAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,CADF;AAcD","sourcesContent":["/* eslint-disable react/display-name */\r\nimport * as React from 'react'\r\nimport { Sizes } from '@dungdang/react-native-basic/index'\r\nimport MaterialIcons from 'react-native-vector-icons/MaterialIcons'\r\nimport { NavigationContainer } from '@react-navigation/native'\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs'\r\nimport { createStackNavigator } from '@react-navigation/stack'\r\nimport HomeContainer from './Home/HomeContainer'\r\nimport ReportContainer from './Report/ReportContainer'\r\nimport SettingContainer from './Setting/SettingContainer'\r\nimport LoginContainer from './Login/LoginContainer'\r\nimport { AppThemeProvider } from '../theme/themeProvider'\r\n\r\nconst Tab = createBottomTabNavigator()\r\n\r\nfunction TAB() {\r\n  return (\r\n    <Tab.Navigator\r\n      initialRouteName=\"HomeContainer\"\r\n      screenOptions={({ route }) => ({\r\n        tabBarIcon: ({ focused, color, size }) => {\r\n          let iconName\r\n\r\n          if (route.name === 'HomeContainer') iconName = 'dashboard'\r\n          else if (route.name === 'ReportContainer') iconName = 'insert-chart'\r\n          else if (route.name === 'SettingContainer') iconName = 'settings'\r\n\r\n          return <MaterialIcons name={iconName} size={size} color={color} />\r\n        },\r\n      })}\r\n      tabBarOptions={{\r\n        activeTintColor: '#3E1B72',\r\n        inactiveTintColor: '#B2C1C6',\r\n        showLabel: false,\r\n        style: {\r\n          backgroundColor: '#fff',\r\n          borderTopLeftRadius: Sizes.h40,\r\n          borderTopRightRadius: Sizes.h40,\r\n        },\r\n        keyboardHidesTabBar: true,\r\n      }}\r\n    >\r\n      <Tab.Screen name=\"HomeContainer\" component={HomeContainer} />\r\n      <Tab.Screen name=\"ReportContainer\" component={ReportContainer} />\r\n      <Tab.Screen name=\"SettingContainer\" component={SettingContainer} />\r\n    </Tab.Navigator>\r\n  )\r\n}\r\n\r\nconst Stack = createStackNavigator()\r\n\r\nexport default function App() {\r\n  return (\r\n    <AppThemeProvider>\r\n      <NavigationContainer>\r\n        <Stack.Navigator headerMode=\"none\" initialRouteName=\"LoginContainer\">\r\n          <Stack.Screen name=\"LoginContainer\" component={LoginContainer} />\r\n          <Stack.Screen\r\n            options={{ cardStyle: { backgroundColor: '#F8FBFB' } }}\r\n            name=\"Tab\"\r\n            component={TAB}\r\n          />\r\n        </Stack.Navigator>\r\n      </NavigationContainer>\r\n    </AppThemeProvider>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"script"}